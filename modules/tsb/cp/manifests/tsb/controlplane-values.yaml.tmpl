image:%{ if length(regexall("dev", tsb_version)) == 0 }${"\n"}  tag: ${tsb_version}%{ endif }
  registry: ${registry}
secrets:
  elasticsearch:
    username: ${es_username}
    password: ${es_password}
  clusterServiceAccount:
    clusterFQN: ${serviceaccount_clusterfqn}
    JWK: '${serviceaccount_jwk}'
spec:
  hub: ${registry}
  telemetryStore:
    elastic:
      host: ${es_host}
      port: 443
      version: 8
      protocol: https
      selfSigned: true
  managementPlane:
    host: ${tsb_fqdn}
    port: 443
    clusterName: ${cluster_name}
    selfSigned: true
  components:
    xcp:
      centralAuthMode: JWT
      centralProvidedCaCert: true
      configProtection: {}
      isolationBoundaries:
      - name: global
        revisions:
        - name: default
          %{ if length(regexall("dev", tsb_version)) == 0 }
          istio:
            tsbVersion: ${tsb_version}
          %{ endif }
        - name: canary
          %{ if length(regexall("dev", tsb_version)) == 0 }
          istio:
            tsbVersion: ${tsb_version}
          %{ endif }
      kubeSpec:
        overlays:
          - apiVersion: install.xcp.tetrate.io/v1alpha1
            kind: EdgeXcp
            name: edge-xcp
            patches:
              - path: spec.components.edgeServer.kubeSpec.deployment.env[-1]
                value:
                  name: ENABLE_NETWORK_POLICY_TRANSLATION
                  value: "true"
    gitops:
      enabled: true
      reconcileInterval: 600s
      pushMode: ASYNC
    internalCertProvider:
      certManager:
        managed: AUTO
    oap:
      streamingLogEnabled: true
    %{ if ratelimit_enabled }
    rateLimitServer:
      domain: local
      backend:
        redis:
          uri: redis-master.${ratelimit_namespace}.svc.cluster.local:6379
    %{ endif }
  meshExpansion: {}
  meshObservability:
    settings:
      apiEndpointMetricsEnabled: true  
operator:
  deployment:
    env:
    - name: ISTIO_ISOLATION_BOUNDARIES
      value: "true"
